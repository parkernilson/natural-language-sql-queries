(base) parkernilson@ParkersMBP2023 natlang-sql % bun start 
$ bun --env-file=.env ./src/index.ts --verbose
Welcome to NatLang SQL!
Type prompt> How many users are there in the database?

create table users (
id integer primary key autoincrement,
first_name text not null,
last_name text not null,
email text not null
);
/*
3 example rows :
select * from users limit 3;
id first_name last_name email
1 John Doe johndoe@gmail.com
2 Guy Montgommery guy234@hotmail.net
3 Brody Jameson secretman918@mail.com
*/

create table goals (
id integer primary key autoincrement,
created_at datetime not null,
title text not null,
owner text not null,
foreign key (owner) references users(id)
on delete cascade
);
/*
3 example rows :
select * from goals limit 3;
id created_at title owner
1 2022-01-01 12:23:52 'Lose 10 pounds' 1
2 2022-01-02 20:18:12 'Learn to play guitar' 2
3 2022-01-03 03:51:37 'Write a novel' 3
*/

create table entries (
id integer primary key autoincrement,
created_at datetime not null,
goal_id integer not null,
text_content text,
goal_completed boolean,
foreign key (goal_id) references goals(id)
on delete cascade
);
/*
3 example rows :
select * from entries limit 3;
id created_at goal_id text_content goal_completed
1 2022-01-02 14:23:52 1 'Lost 2 pounds this week!' true
2 2022-01-03 08:18:12 2 'Learned to play G chord' true
3 2022-01-04 19:51:37 3 'Didn't have time to write today' false
*/

create table share_records (
created_at datetime not null,
goal_id integer not null,
shared_with integer not null,
accepted boolean not null,
primary key (goal_id, shared_with),
foreign key (goal_id) references goals(id)
on delete cascade,
foreign key (shared_with) references users(id)
on delete cascade
);
/*
3 example rows :
select * from share_records limit 3;
created_at goal_id shared_with accepted
2022-01-02 14:23:52 1 2 true
2022-01-03 08:18:12 2 3 true
2022-01-04 19:51:37 3 1 false
*/

-- Using valid SQLite , answer the following
questions for the tables provided above . Include nothing in the answer but a single valid sql query and no comments .

Question: What is Kyle Davis' email address?
select email from users where first_name = 'Kyle' and last_name = 'Davis';
Question: Return the first name of each user that has accepted an invitation from user with id 1.
select u.first_name from users as u join share_records as sr on u.id = sr.shared_with where sr.accepted = 1 join goals as g on sr.goal_id = g.id where g.owner = 1;
Question: Show the title of every goal that was created after Feb 1, 2022.
select title from goals where created_at > '2022-02-01';
Question: How many users are there in the database?

Using the above prompt to generate SQL...
Generated SQL:
select count(*) from users;
Continue? (y/n)  y
Result:
{
  "count(*)": 11,
}
Type prompt> What is the most common first letter in the user's first names

create table users (
id integer primary key autoincrement,
first_name text not null,
last_name text not null,
email text not null
);
/*
3 example rows :
select * from users limit 3;
id first_name last_name email
1 John Doe johndoe@gmail.com
2 Guy Montgommery guy234@hotmail.net
3 Brody Jameson secretman918@mail.com
*/

create table goals (
id integer primary key autoincrement,
created_at datetime not null,
title text not null,
owner text not null,
foreign key (owner) references users(id)
on delete cascade
);
/*
3 example rows :
select * from goals limit 3;
id created_at title owner
1 2022-01-01 12:23:52 'Lose 10 pounds' 1
2 2022-01-02 20:18:12 'Learn to play guitar' 2
3 2022-01-03 03:51:37 'Write a novel' 3
*/

create table entries (
id integer primary key autoincrement,
created_at datetime not null,
goal_id integer not null,
text_content text,
goal_completed boolean,
foreign key (goal_id) references goals(id)
on delete cascade
);
/*
3 example rows :
select * from entries limit 3;
id created_at goal_id text_content goal_completed
1 2022-01-02 14:23:52 1 'Lost 2 pounds this week!' true
2 2022-01-03 08:18:12 2 'Learned to play G chord' true
3 2022-01-04 19:51:37 3 'Didn't have time to write today' false
*/

create table share_records (
created_at datetime not null,
goal_id integer not null,
shared_with integer not null,
accepted boolean not null,
primary key (goal_id, shared_with),
foreign key (goal_id) references goals(id)
on delete cascade,
foreign key (shared_with) references users(id)
on delete cascade
);
/*
3 example rows :
select * from share_records limit 3;
created_at goal_id shared_with accepted
2022-01-02 14:23:52 1 2 true
2022-01-03 08:18:12 2 3 true
2022-01-04 19:51:37 3 1 false
*/

-- Using valid SQLite , answer the following
questions for the tables provided above . Include nothing in the answer but a single valid sql query and no comments .

Question: What is Kyle Davis' email address?
select email from users where first_name = 'Kyle' and last_name = 'Davis';
Question: Return the first name of each user that has accepted an invitation from user with id 1.
select u.first_name from users as u join share_records as sr on u.id = sr.shared_with where sr.accepted = 1 join goals as g on sr.goal_id = g.id where g.owner = 1;
Question: Show the title of every goal that was created after Feb 1, 2022.
select title from goals where created_at > '2022-02-01';
Question: What is the most common first letter in the user's first names

Using the above prompt to generate SQL...
Generated SQL:
select substr(first_name, 1, 1) as first_letter, count(*) as letter_count from users group by first_letter order by letter_count desc limit 1;
Continue? (y/n)  y
Result:
{
  first_letter: "J",
  letter_count: 2,
}
Type prompt> List all the users who have not shared any of their goals 

create table users (
id integer primary key autoincrement,
first_name text not null,
last_name text not null,
email text not null
);
/*
3 example rows :
select * from users limit 3;
id first_name last_name email
1 John Doe johndoe@gmail.com
2 Guy Montgommery guy234@hotmail.net
3 Brody Jameson secretman918@mail.com
*/

create table goals (
id integer primary key autoincrement,
created_at datetime not null,
title text not null,
owner text not null,
foreign key (owner) references users(id)
on delete cascade
);
/*
3 example rows :
select * from goals limit 3;
id created_at title owner
1 2022-01-01 12:23:52 'Lose 10 pounds' 1
2 2022-01-02 20:18:12 'Learn to play guitar' 2
3 2022-01-03 03:51:37 'Write a novel' 3
*/

create table entries (
id integer primary key autoincrement,
created_at datetime not null,
goal_id integer not null,
text_content text,
goal_completed boolean,
foreign key (goal_id) references goals(id)
on delete cascade
);
/*
3 example rows :
select * from entries limit 3;
id created_at goal_id text_content goal_completed
1 2022-01-02 14:23:52 1 'Lost 2 pounds this week!' true
2 2022-01-03 08:18:12 2 'Learned to play G chord' true
3 2022-01-04 19:51:37 3 'Didn't have time to write today' false
*/

create table share_records (
created_at datetime not null,
goal_id integer not null,
shared_with integer not null,
accepted boolean not null,
primary key (goal_id, shared_with),
foreign key (goal_id) references goals(id)
on delete cascade,
foreign key (shared_with) references users(id)
on delete cascade
);
/*
3 example rows :
select * from share_records limit 3;
created_at goal_id shared_with accepted
2022-01-02 14:23:52 1 2 true
2022-01-03 08:18:12 2 3 true
2022-01-04 19:51:37 3 1 false
*/

-- Using valid SQLite , answer the following
questions for the tables provided above . Include nothing in the answer but a single valid sql query and no comments .

Question: What is Kyle Davis' email address?
select email from users where first_name = 'Kyle' and last_name = 'Davis';
Question: Return the first name of each user that has accepted an invitation from user with id 1.
select u.first_name from users as u join share_records as sr on u.id = sr.shared_with where sr.accepted = 1 join goals as g on sr.goal_id = g.id where g.owner = 1;
Question: Show the title of every goal that was created after Feb 1, 2022.
select title from goals where created_at > '2022-02-01';
Question: List all the users who have not shared any of their goals

Using the above prompt to generate SQL...
Generated SQL:
SELECT DISTINCT u.* 
FROM users u 
WHERE NOT EXISTS (
    SELECT 1 
    FROM share_records sr 
    JOIN goals g ON sr.goal_id = g.id 
    WHERE g.owner = u.id
);
Continue? (y/n)  y
Result:
{
  id: 2,
  first_name: "John",
  last_name: "Doe",
  email: "john.doe@mail.com",
}
Type prompt> Show the goal with the most completed entries 

create table users (
id integer primary key autoincrement,
first_name text not null,
last_name text not null,
email text not null
);
/*
3 example rows :
select * from users limit 3;
id first_name last_name email
1 John Doe johndoe@gmail.com
2 Guy Montgommery guy234@hotmail.net
3 Brody Jameson secretman918@mail.com
*/

create table goals (
id integer primary key autoincrement,
created_at datetime not null,
title text not null,
owner text not null,
foreign key (owner) references users(id)
on delete cascade
);
/*
3 example rows :
select * from goals limit 3;
id created_at title owner
1 2022-01-01 12:23:52 'Lose 10 pounds' 1
2 2022-01-02 20:18:12 'Learn to play guitar' 2
3 2022-01-03 03:51:37 'Write a novel' 3
*/

create table entries (
id integer primary key autoincrement,
created_at datetime not null,
goal_id integer not null,
text_content text,
goal_completed boolean,
foreign key (goal_id) references goals(id)
on delete cascade
);
/*
3 example rows :
select * from entries limit 3;
id created_at goal_id text_content goal_completed
1 2022-01-02 14:23:52 1 'Lost 2 pounds this week!' true
2 2022-01-03 08:18:12 2 'Learned to play G chord' true
3 2022-01-04 19:51:37 3 'Didn't have time to write today' false
*/

create table share_records (
created_at datetime not null,
goal_id integer not null,
shared_with integer not null,
accepted boolean not null,
primary key (goal_id, shared_with),
foreign key (goal_id) references goals(id)
on delete cascade,
foreign key (shared_with) references users(id)
on delete cascade
);
/*
3 example rows :
select * from share_records limit 3;
created_at goal_id shared_with accepted
2022-01-02 14:23:52 1 2 true
2022-01-03 08:18:12 2 3 true
2022-01-04 19:51:37 3 1 false
*/

-- Using valid SQLite , answer the following
questions for the tables provided above . Include nothing in the answer but a single valid sql query and no comments .

Question: What is Kyle Davis' email address?
select email from users where first_name = 'Kyle' and last_name = 'Davis';
Question: Return the first name of each user that has accepted an invitation from user with id 1.
select u.first_name from users as u join share_records as sr on u.id = sr.shared_with where sr.accepted = 1 join goals as g on sr.goal_id = g.id where g.owner = 1;
Question: Show the title of every goal that was created after Feb 1, 2022.
select title from goals where created_at > '2022-02-01';
Question: Show the goal with the most completed entries

Using the above prompt to generate SQL...
Generated SQL:
SELECT g.title, COUNT(e.id) as completed_count
FROM goals g 
JOIN entries e ON g.id = e.goal_id 
WHERE e.goal_completed = true 
GROUP BY g.id, g.title 
ORDER BY completed_count DESC 
LIMIT 1;
Continue? (y/n)  y
Result:
{
  title: "Goal 1",
  completed_count: 5,
}
Type prompt> Get the email of user with the shortest first name 

create table users (
id integer primary key autoincrement,
first_name text not null,
last_name text not null,
email text not null
);
/*
3 example rows :
select * from users limit 3;
id first_name last_name email
1 John Doe johndoe@gmail.com
2 Guy Montgommery guy234@hotmail.net
3 Brody Jameson secretman918@mail.com
*/

create table goals (
id integer primary key autoincrement,
created_at datetime not null,
title text not null,
owner text not null,
foreign key (owner) references users(id)
on delete cascade
);
/*
3 example rows :
select * from goals limit 3;
id created_at title owner
1 2022-01-01 12:23:52 'Lose 10 pounds' 1
2 2022-01-02 20:18:12 'Learn to play guitar' 2
3 2022-01-03 03:51:37 'Write a novel' 3
*/

create table entries (
id integer primary key autoincrement,
created_at datetime not null,
goal_id integer not null,
text_content text,
goal_completed boolean,
foreign key (goal_id) references goals(id)
on delete cascade
);
/*
3 example rows :
select * from entries limit 3;
id created_at goal_id text_content goal_completed
1 2022-01-02 14:23:52 1 'Lost 2 pounds this week!' true
2 2022-01-03 08:18:12 2 'Learned to play G chord' true
3 2022-01-04 19:51:37 3 'Didn't have time to write today' false
*/

create table share_records (
created_at datetime not null,
goal_id integer not null,
shared_with integer not null,
accepted boolean not null,
primary key (goal_id, shared_with),
foreign key (goal_id) references goals(id)
on delete cascade,
foreign key (shared_with) references users(id)
on delete cascade
);
/*
3 example rows :
select * from share_records limit 3;
created_at goal_id shared_with accepted
2022-01-02 14:23:52 1 2 true
2022-01-03 08:18:12 2 3 true
2022-01-04 19:51:37 3 1 false
*/

-- Using valid SQLite , answer the following
questions for the tables provided above . Include nothing in the answer but a single valid sql query and no comments .

Question: What is Kyle Davis' email address?
select email from users where first_name = 'Kyle' and last_name = 'Davis';
Question: Return the first name of each user that has accepted an invitation from user with id 1.
select u.first_name from users as u join share_records as sr on u.id = sr.shared_with where sr.accepted = 1 join goals as g on sr.goal_id = g.id where g.owner = 1;
Question: Show the title of every goal that was created after Feb 1, 2022.
select title from goals where created_at > '2022-02-01';
Question: Get the email of user with the shortest first name

Using the above prompt to generate SQL...
Generated SQL:
select email from users where length(first_name) = (select min(length(first_name)) from users);
Continue? (y/n)  y
Result:
{
  email: "bob.brown@mail.com",
}
Type prompt> Who is the user who has accepted the most share requests?

create table users (
id integer primary key autoincrement,
first_name text not null,
last_name text not null,
email text not null
);
/*
3 example rows :
select * from users limit 3;
id first_name last_name email
1 John Doe johndoe@gmail.com
2 Guy Montgommery guy234@hotmail.net
3 Brody Jameson secretman918@mail.com
*/

create table goals (
id integer primary key autoincrement,
created_at datetime not null,
title text not null,
owner text not null,
foreign key (owner) references users(id)
on delete cascade
);
/*
3 example rows :
select * from goals limit 3;
id created_at title owner
1 2022-01-01 12:23:52 'Lose 10 pounds' 1
2 2022-01-02 20:18:12 'Learn to play guitar' 2
3 2022-01-03 03:51:37 'Write a novel' 3
*/

create table entries (
id integer primary key autoincrement,
created_at datetime not null,
goal_id integer not null,
text_content text,
goal_completed boolean,
foreign key (goal_id) references goals(id)
on delete cascade
);
/*
3 example rows :
select * from entries limit 3;
id created_at goal_id text_content goal_completed
1 2022-01-02 14:23:52 1 'Lost 2 pounds this week!' true
2 2022-01-03 08:18:12 2 'Learned to play G chord' true
3 2022-01-04 19:51:37 3 'Didn't have time to write today' false
*/

create table share_records (
created_at datetime not null,
goal_id integer not null,
shared_with integer not null,
accepted boolean not null,
primary key (goal_id, shared_with),
foreign key (goal_id) references goals(id)
on delete cascade,
foreign key (shared_with) references users(id)
on delete cascade
);
/*
3 example rows :
select * from share_records limit 3;
created_at goal_id shared_with accepted
2022-01-02 14:23:52 1 2 true
2022-01-03 08:18:12 2 3 true
2022-01-04 19:51:37 3 1 false
*/

-- Using valid SQLite , answer the following
questions for the tables provided above . Include nothing in the answer but a single valid sql query and no comments .

Question: What is Kyle Davis' email address?
select email from users where first_name = 'Kyle' and last_name = 'Davis';
Question: Return the first name of each user that has accepted an invitation from user with id 1.
select u.first_name from users as u join share_records as sr on u.id = sr.shared_with where sr.accepted = 1 join goals as g on sr.goal_id = g.id where g.owner = 1;
Question: Show the title of every goal that was created after Feb 1, 2022.
select title from goals where created_at > '2022-02-01';
Question: Who is the user who has accepted the most share requests?

Using the above prompt to generate SQL...
Generated SQL:
select u.first_name
from users u
join share_records sr on u.id = sr.shared_with
where sr.accepted = true
group by u.id, u.first_name
order by count(*) desc
limit 1;
Continue? (y/n)  y
Result:
{
  first_name: "John",
}
Type prompt> 